<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vm="using:SerialLoops.ViewModels.Editors"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:assets="using:SerialLoops.Assets"
             xmlns:models="using:SerialLoops.Models"
             xmlns:paz="using:Avalonia.Controls.PanAndZoom"
             xmlns:utility="using:SerialLoops.Utility"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:DataType="vm:MapEditorViewModel"
             x:Class="SerialLoops.Views.Editors.MapEditorView">
    <UserControl.Resources>
        <utility:SKAvaloniaBrushConverter x:Key="BrushConverter"/>
        <utility:ShortSubtractionConverter x:Key="SubtractionConverter"/>
    </UserControl.Resources>

    <Grid RowDefinitions="Auto,Auto,Auto,*">
        <StackPanel Grid.Row="0" Orientation="Vertical" Margin="20" Spacing="10" HorizontalAlignment="Center">
            <StackPanel Orientation="Horizontal" Spacing="10" HorizontalAlignment="Center">
                <CheckBox IsChecked="{Binding BgLayerDisplayed}" Content="{x:Static assets:Strings.BG_Layer}"
                          HorizontalAlignment="Center"/>
                <CheckBox IsChecked="{Binding BgObjectLayerDisplayed}" Content="{x:Static assets:Strings.BG_Object_Layer}"
                          HorizontalAlignment="Center"/>
                <CheckBox IsChecked="{Binding BgOcclusionLayerDisplayed}" Content="{x:Static assets:Strings.BG_Occlusion_Layer}"
                          HorizontalAlignment="Center"/>
                <CheckBox IsChecked="{Binding ObjectLayerDisplayed}" Content="{x:Static assets:Strings.Object_Layer}"
                          HorizontalAlignment="Center"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Spacing="10" HorizontalAlignment="Center">
                <CheckBox IsChecked="{Binding ScrollingBgDisplayed}" Content="{x:Static assets:Strings.Scrolling_BG}"
                          HorizontalAlignment="Center"/>
                <CheckBox IsChecked="{Binding InfoLayerDisplayed}" Content="{x:Static assets:Strings.Info_Layer}"
                          HorizontalAlignment="Center"/>
                <CheckBox IsChecked="{Binding BgJunkLayerDisplayed}" Content="{x:Static assets:Strings.BG_Junk_Layer}"
                          HorizontalAlignment="Center"/>
                <CheckBox IsChecked="{Binding ObjectJunkLayerDisplayed}" Content="{x:Static assets:Strings.Object_Junk_Layer}"
                          HorizontalAlignment="Center"/>
            </StackPanel>
        </StackPanel>

        <StackPanel Grid.Row="1" Orientation="Vertical" Margin="20" Spacing="10" HorizontalAlignment="Center">
            <StackPanel Orientation="Horizontal" Spacing="10" HorizontalAlignment="Center">
                <CheckBox IsChecked="{Binding Unknown2sDisplayed}" Content="{x:Static assets:Strings.Unknown}"
                          HorizontalAlignment="Center"/>
                <CheckBox IsChecked="{Binding ObjectPositionsDisplayed}" Content="{x:Static assets:Strings.Object_Locations}"
                          HorizontalAlignment="Center"/>
                <CheckBox IsChecked="{Binding InteractableObjectsDisplayed}" Content="{x:Static assets:Strings.Interactable_Objects}"
                          HorizontalAlignment="Center"/>
                <CheckBox IsChecked="{Binding DrawCameraTruckingDefinitions}" Content="{x:Static assets:Strings.Camera_Trucking}"
                          HorizontalAlignment="Center"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Spacing="10" HorizontalAlignment="Center">
                <CheckBox IsChecked="{Binding DrawPathingMap}" Content="{x:Static assets:Strings.Draw_Pathing_Map}"
                          HorizontalAlignment="Center"/>
                <CheckBox IsChecked="{Binding DrawStartingPoint}" Content="{x:Static assets:Strings.Draw_Starting_Point}"
                          HorizontalAlignment="Center"/>
                <CheckBox IsChecked="{Binding DrawOrigin}" Content="{x:Static assets:Strings.Draw_Origin}"
                          HorizontalAlignment="Center"/>
                <CheckBox IsChecked="{Binding DrawBoundary}" Content="{x:Static assets:Strings.Draw_Boundary}"
                          HorizontalAlignment="Center"/>
            </StackPanel>
        </StackPanel>

        <ScrollViewer Grid.Row="3">
            <paz:ZoomBorder Stretch="None" ZoomSpeed="1.2" ClipToBounds="True" Focusable="True"
                            VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                            EnablePan="True" PanButton="Left">
                <Canvas Width="{Binding CanvasWidth}" Height="{Binding CanvasHeight}">
                    <!-- Scrolling BG -->
                    <!-- I'm not happy with how this was implemented, but I couldn't get Canvas.Background to work so 🤷‍♀️ -->
                    <ItemsRepeater ItemsSource="{Binding ScrollingBgTileSource}" IsVisible="{Binding ScrollingBgDisplayed}">
                        <ItemsRepeater.Layout>
                            <UniformGridLayout MaximumRowsOrColumns="{Binding ScrollingBgHorizontalTileCount}"
                                               Orientation="Horizontal" MinColumnSpacing="0" MinRowSpacing="0"/>
                        </ItemsRepeater.Layout>
                        <ItemsRepeater.ItemTemplate>
                            <DataTemplate DataType="vm:ScrollingBgWrapper">
                                <ItemsControl ItemsSource="{Binding ScrollingBg}">
                                    <ItemsControl.RenderTransform>
                                        <ScaleTransform ScaleX="{Binding ScaleX}" ScaleY="{Binding ScaleY}"/>
                                    </ItemsControl.RenderTransform>
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <Canvas Width="{Binding TileWidth}" Height="{Binding TileHeight}"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate DataType="models:LayoutEntryWithImage">
                                            <Image Source="{Binding CroppedImage, Converter={x:Static utility:SLConverters.SKBitmapToAvaloniaConverter}}"
                                                   Stretch="Fill" Width="{Binding Width}" Height="{Binding Height}"/>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                    <ItemsControl.Styles>
                                        <Style Selector="ItemsControl > ContentPresenter" x:DataType="models:LayoutEntryWithImage">
                                            <Setter Property="(Canvas.Left)" Value="{Binding ScreenX}"/>
                                            <Setter Property="(Canvas.Top)" Value="{Binding ScreenY}"/>
                                        </Style>
                                    </ItemsControl.Styles>
                                </ItemsControl>
                            </DataTemplate>
                        </ItemsRepeater.ItemTemplate>
                    </ItemsRepeater>

                    <!-- Background Layer -->
                    <ItemsControl ItemsSource="{Binding BgLayer}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas Width="{Binding CanvasWidth}" Height="{Binding CanvasHeight}"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="models:LayoutEntryWithImage">
                                <Image Source="{Binding CroppedImage, Converter={x:Static utility:SLConverters.SKBitmapToAvaloniaConverter}}"
                                       Stretch="Fill" Width="{Binding Width}" Height="{Binding Height}"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.Styles>
                            <Style Selector="ItemsControl > ContentPresenter" x:DataType="models:LayoutEntryWithImage">
                                <Setter Property="(Canvas.Left)" Value="{Binding ScreenX}"/>
                                <Setter Property="(Canvas.Top)" Value="{Binding ScreenY}"/>
                                <Setter Property="IsVisible" Value="{Binding IsVisible}"/>
                            </Style>
                        </ItemsControl.Styles>
                    </ItemsControl>

                    <!-- BG Junk Layer -->
                    <ItemsControl ItemsSource="{Binding BgJunkLayer}" IsVisible="{Binding BgJunkLayerDisplayed}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas Width="{Binding CanvasWidth}" Height="{Binding CanvasHeight}"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="models:LayoutEntryWithImage">
                                <Image Source="{Binding CroppedImage, Converter={x:Static utility:SLConverters.SKBitmapToAvaloniaConverter}}"
                                       Stretch="Fill" Width="{Binding Width}" Height="{Binding Height}"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.Styles>
                            <Style Selector="ItemsControl > ContentPresenter" x:DataType="models:LayoutEntryWithImage">
                                <Setter Property="(Canvas.Left)" Value="{Binding ScreenX}"/>
                                <Setter Property="(Canvas.Top)" Value="{Binding ScreenY}"/>
                            </Style>
                        </ItemsControl.Styles>
                    </ItemsControl>

                    <!-- Object Layer -->
                    <ItemsControl ItemsSource="{Binding ObjectLayer}" IsVisible="{Binding ObjectLayerDisplayed}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas Width="{Binding CanvasWidth}" Height="{Binding CanvasHeight}"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="models:LayoutEntryWithImage">
                                <Image Source="{Binding CroppedImage, Converter={x:Static utility:SLConverters.SKBitmapToAvaloniaConverter}}"
                                       Stretch="Fill" Width="{Binding Width}" Height="{Binding Height}"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.Styles>
                            <Style Selector="ItemsControl > ContentPresenter" x:DataType="models:LayoutEntryWithImage">
                                <Setter Property="(Canvas.Left)" Value="{Binding ScreenX}"/>
                                <Setter Property="(Canvas.Top)" Value="{Binding ScreenY}"/>
                            </Style>
                        </ItemsControl.Styles>
                    </ItemsControl>

                    <!-- Object Junk Layer -->
                    <ItemsControl ItemsSource="{Binding ObjectJunkLayer}" IsVisible="{Binding ObjectJunkLayerDisplayed}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas Width="{Binding CanvasWidth}" Height="{Binding CanvasHeight}"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="models:LayoutEntryWithImage">
                                <Image Source="{Binding CroppedImage, Converter={x:Static utility:SLConverters.SKBitmapToAvaloniaConverter}}"
                                       Stretch="Fill" Width="{Binding Width}" Height="{Binding Height}"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.Styles>
                            <Style Selector="ItemsControl > ContentPresenter" x:DataType="models:LayoutEntryWithImage">
                                <Setter Property="(Canvas.Left)" Value="{Binding ScreenX}"/>
                                <Setter Property="(Canvas.Top)" Value="{Binding ScreenY}"/>
                            </Style>
                        </ItemsControl.Styles>
                    </ItemsControl>

                    <!-- Occlusion Layer -->
                    <ItemsControl ItemsSource="{Binding OcclusionLayer}" IsVisible="{Binding BgOcclusionLayerDisplayed}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas Width="{Binding CanvasWidth}" Height="{Binding CanvasHeight}"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="models:LayoutEntryWithImage">
                                <Image Source="{Binding CroppedImage, Converter={x:Static utility:SLConverters.SKBitmapToAvaloniaConverter}}"
                                       Stretch="Fill" Width="{Binding Width}" Height="{Binding Height}"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.Styles>
                            <Style Selector="ItemsControl > ContentPresenter" x:DataType="models:LayoutEntryWithImage">
                                <Setter Property="(Canvas.Left)" Value="{Binding ScreenX}"/>
                                <Setter Property="(Canvas.Top)" Value="{Binding ScreenY}"/>
                            </Style>
                        </ItemsControl.Styles>
                    </ItemsControl>

                    <!-- Pathing Map -->
                    <ItemsControl ItemsSource="{Binding PathingMap}" IsVisible="{Binding DrawPathingMap}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas Width="{Binding CanvasWidth}" Height="{Binding CanvasHeight}"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="models:HighlightedSpace">
                                <Path Fill="{Binding Color}">
                                    <Path.Data>
                                        <PathGeometry>
                                            <PathFigure StartPoint="{Binding Top}" IsClosed="True" IsFilled="True">
                                                <LineSegment Point="{Binding Left}"/>
                                                <LineSegment Point="{Binding Bottom}"/>
                                                <LineSegment Point="{Binding Right}"/>
                                            </PathFigure>
                                        </PathGeometry>
                                    </Path.Data>
                                </Path>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <!-- Info Layer -->
                    <ItemsControl ItemsSource="{Binding InfoLayer}" IsVisible="{Binding InfoLayerDisplayed}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas Width="{Binding CanvasWidth}" Height="{Binding CanvasHeight}"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="models:LayoutEntryWithImage">
                                <Rectangle Stroke="{Binding Tint, Converter={StaticResource BrushConverter}}"
                                           StrokeThickness="4" Width="{Binding ScreenWidth}" Height="{Binding ScreenHeight}"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.Styles>
                            <Style Selector="ItemsControl > ContentPresenter" x:DataType="models:LayoutEntryWithImage">
                                <Setter Property="(Canvas.Left)" Value="{Binding ScreenX}"/>
                                <Setter Property="(Canvas.Top)" Value="{Binding ScreenY}"/>
                            </Style>
                        </ItemsControl.Styles>
                    </ItemsControl>

                    <!-- Interactable Objects -->
                    <ItemsControl ItemsSource="{Binding InteractableObjects}" IsVisible="{Binding InteractableObjectsDisplayed}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas Width="{Binding CanvasWidth}" Height="{Binding CanvasHeight}"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="models:HighlightedSpace">
                                <Path Fill="{Binding Color}">
                                    <Path.Data>
                                        <PathGeometry>
                                            <PathFigure StartPoint="{Binding Top}" IsClosed="True" IsFilled="True">
                                                <LineSegment Point="{Binding Left}"/>
                                                <LineSegment Point="{Binding Bottom}"/>
                                                <LineSegment Point="{Binding Right}"/>
                                            </PathFigure>
                                        </PathGeometry>
                                    </Path.Data>
                                </Path>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <ItemsControl ItemsSource="{Binding InteractableObjectsHiglightLayer}" IsVisible="{Binding InteractableObjectsDisplayed}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas Width="{Binding CanvasWidth}" Height="{Binding CanvasHeight}"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="models:LayoutEntryWithImage">
                                <Rectangle Stroke="{Binding Tint, Converter={StaticResource BrushConverter}}"
                                           StrokeThickness="2" Width="{Binding ScreenWidth}" Height="{Binding ScreenHeight}"
                                           Fill="#05FFFFFF" ToolTip.Tip="{Binding ToolTip}"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.Styles>
                            <Style Selector="ItemsControl > ContentPresenter" x:DataType="models:LayoutEntryWithImage">
                                <Setter Property="(Canvas.Left)" Value="{Binding ScreenX}"/>
                                <Setter Property="(Canvas.Top)" Value="{Binding ScreenY}"/>
                            </Style>
                        </ItemsControl.Styles>
                    </ItemsControl>

                    <!-- Unknown 2 Objects -->
                    <ItemsControl ItemsSource="{Binding Unknown2s}" IsVisible="{Binding Unknown2sDisplayed}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas Width="{Binding CanvasWidth}" Height="{Binding CanvasHeight}"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="models:HighlightedSpace">
                                <Path Fill="{Binding Color}">
                                    <Path.Data>
                                        <PathGeometry>
                                            <PathFigure StartPoint="{Binding Top}" IsClosed="True" IsFilled="True">
                                                <LineSegment Point="{Binding Left}"/>
                                                <LineSegment Point="{Binding Bottom}"/>
                                                <LineSegment Point="{Binding Right}"/>
                                            </PathFigure>
                                        </PathGeometry>
                                    </Path.Data>
                                </Path>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <!-- Object Locations -->
                    <ItemsControl ItemsSource="{Binding ObjectPositions}" IsVisible="{Binding ObjectPositionsDisplayed}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas Width="{Binding CanvasWidth}" Height="{Binding CanvasHeight}"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="models:HighlightedSpace">
                                <Path Fill="{Binding Color}">
                                    <Path.Data>
                                        <PathGeometry>
                                            <PathFigure StartPoint="{Binding Top}" IsClosed="True" IsFilled="True">
                                                <LineSegment Point="{Binding Left}"/>
                                                <LineSegment Point="{Binding Bottom}"/>
                                                <LineSegment Point="{Binding Right}"/>
                                            </PathFigure>
                                        </PathGeometry>
                                    </Path.Data>
                                </Path>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <!-- Camera Trucking Info -->
                    <ItemsControl ItemsSource="{Binding CameraTruckingDefinitions}" IsVisible="{Binding DrawCameraTruckingDefinitions}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas Width="{Binding CanvasWidth}" Height="{Binding CanvasHeight}"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="models:LayoutEntryWithImage">
                                <Rectangle Stroke="{Binding Tint, Converter={StaticResource BrushConverter}}"
                                           StrokeThickness="4" Width="{Binding ScreenWidth}" Height="{Binding ScreenHeight}"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.Styles>
                            <Style Selector="ItemsControl > ContentPresenter" x:DataType="models:LayoutEntryWithImage">
                                <Setter Property="(Canvas.Left)" Value="{Binding ScreenX}"/>
                                <Setter Property="(Canvas.Top)" Value="{Binding ScreenY}"/>
                            </Style>
                        </ItemsControl.Styles>
                    </ItemsControl>

                    <!-- Origin should be centered, so we use converters to make the visualization's center be precisely on its point -->
                    <Ellipse Fill="{Binding OriginColor, Converter={StaticResource BrushConverter}}" Width="8" Height="8" IsVisible="{Binding DrawOrigin}"
                             Canvas.Left="{Binding OriginX, Converter={StaticResource SubtractionConverter}, ConverterParameter=4}"
                             Canvas.Top="{Binding OriginY, Converter={StaticResource SubtractionConverter}, ConverterParameter=4}"/>

                    <Rectangle Stroke="{Binding BoundaryColor, Converter={StaticResource BrushConverter}}" StrokeThickness="3" IsVisible="{Binding DrawBoundary}"
                               Canvas.Left="{Binding BoundaryX}" Canvas.Top="{Binding BoundaryY}"
                               Width="{Binding BoundaryWidth}" Height="{Binding BoundaryHeight}"/>

                    <Svg Path="avares://SerialLoops/Assets/Icons/Camera.svg" Width="32" Height="32" Canvas.Left="{Binding StartingPointX}"
                         Canvas.Top="{Binding StartingPointY}" IsVisible="{Binding DrawStartingPoint}"/>
                </Canvas>
            </paz:ZoomBorder>
        </ScrollViewer>
    </Grid>
</UserControl>

