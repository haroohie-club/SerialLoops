name: Serial Loops Official Build
run-name: "Official release build for Serial Loops"
on:
  # schedule:
  #   - cron: '0 23 * * *'
  workflow_dispatch:
    inputs:
      version:
        description: Release version
        required: true
        type: string
      releaseNotes:
        description: Release notes
        required: true
        type: string

env:
  SLVersion: ${{ inputs.version == '' && format('0.3.pre.a{0}', github.run_number) || inputs.version }}
  SLAssemblyVersion: ${{ inputs.version == '' && format('0.3.9999.a{0}', github.run_number) || inputs.version }}

jobs:
  flatpak-setup:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Setup .NET
        uses: actions/setup-dotnet@v4.1.0
        with:
          dotnet-version: '8.0.x'
      - run: pip install requests
      - run: python install/linux/flatpak/flatpak-dotnet-generator.py --dotnet 8 --freedesktop 23.08 nuget-sources.json src/SerialLoops/SerialLoops.csproj
      - name: Publish nuget-sources.json
        uses: actions/upload-artifact@v4
        with:
          name: nuget-sources
          path: nuget-sources.json
          retention-days: 1
  flatpak:
    needs: flatpak-setup
    runs-on: ubuntu-latest
    container:
      image: bilelmoussaoui/flatpak-github-actions:freedesktop-23.08
      options: --privileged
    steps:
      - name: Check out
        uses: actions/checkout@v4
      - name: Download nuget-sources.json
        uses: actions/download-artifact@v4.1.8
        with:
          name: nuget-sources
          path: install/linux/flatpak/
      - name: Build flatpak
        uses: flatpak/flatpak-github-actions/flatpak-builder@v6
        with:
          manifest-path: install/linux/flatpak/club.haroohie.SerialLoops.yaml
          bundle: SerialLoops.flatpak
          cache-key: flatpak-builder-${{ github.sha }}

  macOS-pkg:
    runs-on: macos-latest
    strategy:
      matrix:
        rid: ['osx-x64', 'osx-arm64']
    steps:
      - name: Check out
        uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4.1.0
        with:
          dotnet-version: '8.0.x'
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - run: pip install macos-pkg-builder
      - name: Restore
        run: dotnet restore src/SerialLoops/SerialLoops.csproj -r ${{ matrix.rid }}
      - name: Build .app
        run: dotnet msbuild src/SerialLoops/SerialLoops.csproj -t:BundleApp -p:Configuration=Release -p:TargetFramework=net8.0 -p:RuntimeIdentifier=${{ matrix.rid }} -p:UseAppHost=true --p:SelfContained=true -p:DebugType=None -p:DebugSymbols=false -p:PublishSingleFile=true
      - name: Build pkg installer
        run: |
          mkdir "install/macos/Serial Loops.app"
          cp -r "src/SerialLoops/bin/Release/net8.0/${{ matrix.rid }}/publish/Serial Loops.app" "install/macos/"
          cd install/macos/
          chmod +x "./Serial Loops.app/Contents/MacOS/SerialLoops"
          python serial_loops_pkg_builder.py $SLVersion
      - name: Upload pkg installer
        uses: actions/upload-artifact@v4
        with:
          name: macOS-${{ matrix.rid }}-installer
          path: install/macos/SerialLoops.pkg
          retention-days: 1


